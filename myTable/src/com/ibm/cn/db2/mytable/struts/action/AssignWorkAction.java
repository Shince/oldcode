/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ibm.cn.db2.mytable.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.ibm.cn.db2.mytable.db.AssignWorkDAO;
import com.ibm.cn.db2.mytable.db.CustomerNameDAO;
import com.ibm.cn.db2.mytable.db.NativePmrDAO;

/** 
 * MyEclipse Struts
 * Creation date: 04-10-2008
 * 
 * XDoclet definition:
 * @struts.action parameter="method" validate="true"
 * @struts.action-forward name="worker" path="/webPages/assignWorkManagement_worker.jsp"
 * @struts.action-forward name="cust" path="/webPages/assignWorkManagement_cust.jsp"
 */
public class AssignWorkAction extends DispatchAction {
	public ActionForward viewCusts(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		ArrayList all = CustomerNameDAO.getInstance().getAllCustomerName();
		request.setAttribute("custNameList", all);
		return mapping.findForward("cust");
	}
	
	public ActionForward viewWorkers(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String name = request.getParameter("custName");
		ArrayList all = AssignWorkDAO.getInstance().getWorkers(name);
		request.setAttribute("workerList", all);
		return mapping.findForward("worker");
	}
	
	public ActionForward delWorker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String custName = request.getParameter("custName");
		String s = request.getParameter("workerID");
		int id = -1;
		try {
			id = Integer.parseInt(s);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		AssignWorkDAO.getInstance().delWorker(id);
		request.setAttribute("workerList", AssignWorkDAO.getInstance().getWorkers(custName));
		return mapping.findForward("worker");
	}
	
	public ActionForward addWorker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String name = request.getParameter("workerName");
		String custName = request.getParameter("custName");
		
		AssignWorkDAO.getInstance().addWorker(name, custName);
		request.setAttribute("workerList", AssignWorkDAO.getInstance().getWorkers(custName));
		return mapping.findForward("worker");
	}
	
	public ActionForward calcPmrCount(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String s = request.getParameter("workerCount");
		String custName = request.getParameter("custName");
		int count = -1;
		try {
			count = Integer.parseInt(s);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		
		int total = NativePmrDAO.getInstance().getCustNameQueryResultCount(custName, true);
		
		String per = "";
		if( count >0 ){
			per = String.valueOf( total/count );
		}else{
			per = "Infinite.";
		}
		
		
		request.setAttribute("totalPmr",new Integer(total));
		request.setAttribute("pmrPerPerson",per);
		request.setAttribute("totalPerson",new Integer(count));
		
		return mapping.findForward("status");
	}
}