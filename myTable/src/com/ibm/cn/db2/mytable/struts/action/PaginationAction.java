/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ibm.cn.db2.mytable.struts.action;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ibm.cn.db2.mytable.cqdb.PMRDimention;
import com.ibm.cn.db2.mytable.db.NativePmrDAO;
import com.ibm.cn.db2.mytable.util.PageUtil;
import com.ibm.cn.db2.mytable.util.Util;

/** 
 * MyEclipse Struts
 * Creation date: 02-19-2008
 * 
 * XDoclet definition:
 * @struts.action
 */
public class PaginationAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		Util.log("pagination", request);
		response.setHeader("Cache-Control","no-cache");
		response.setHeader("Pragma", "no-cache");
		
		//获取页码，不是在session里就是在request里，否则为0
		Integer pInt = (Integer)request.getSession().getAttribute("page");
		int p=(request.getParameter("page")==null)?(pInt==null?0:pInt.intValue()):Integer.parseInt((String)request.getParameter("page"));
		Util.log( "p is " + p );
		
		//true:联合查询, false:单id无日期查询
		Boolean useCustomerInSession =(Boolean)request.getSession().getAttribute("useCustomer");
		boolean useCustomer = useCustomerInSession==null?false:(useCustomerInSession).booleanValue();
		Util.log( "Customer Name:" + useCustomer );
		
		String custIDinSession = (String) request.getSession().getAttribute("query");
		String query = request.getParameter("query");
		if( query==null )query=custIDinSession;
		Util.log( "custID:" + query );
		
		//得到并设定排序字段
		String sortReq = request.getParameter("sortby");
		if( sortReq == null ){
			sortReq = (String)request.getSession().getAttribute("sortby");
		}else{
			request.getSession().setAttribute("sortby", sortReq);
			p=1;
		}
		String sort = getSortBy( sortReq );
		Util.log( "Sort by:" + sort );
		
		//得到是否全部显示
		Boolean showVisibleInSession =(Boolean)request.getSession().getAttribute("visible");
		
		if( showVisibleInSession == null )request.getSession().setAttribute("visible", new Boolean(false));
		boolean showVisible = showVisibleInSession==null?false:(showVisibleInSession).booleanValue();
		Util.log( "Show Visible Only?" + showVisible );
		
		ArrayList a = null;
		if( !useCustomer ){
			a = NativePmrDAO.getInstance().getAllByPage(query, (p-1)*PageUtil.PAGESIZE+1, (p)*PageUtil.PAGESIZE, sort, true, showVisible);
		}else {
			a = NativePmrDAO.getInstance().queryByCustomerName(query, (p-1)*PageUtil.PAGESIZE+1, (p)*PageUtil.PAGESIZE, sort, true, showVisible);
		}
		
		request.getSession().setAttribute("custData", a);
		request.getSession().setAttribute("query", query);
		request.getSession().setAttribute("db", "retrieve");
		request.getSession().setAttribute("page", new Integer(p));
		
		Util.log(request.getSession().getAttribute("visible") + "****************");
		return mapping.findForward( "table" );
	}
	
	private String getSortBy( String by ){
		if( by==null || by.trim().length()==0 )return PMRDimention.PMR_OPEN_DT;
		
		if( by.compareTo(PMRDimention.PMR_OPEN_DT) == 0 ){
			return by;
		}	
		else if(by.compareTo(PMRDimention.PROB_CLOSED_DT) == 0 ){
			return by;
		}
		else if(by.compareTo(PMRDimention.PROB_CUR_SEV_CD) == 0 ){
			return by;
		}
		else if(by.compareTo(PMRDimention.PROB_CUST_ACCT_) == 0 ){
			return by;
		}
		else if(by.compareTo(PMRDimention.PROB_) == 0 ){
			return by;
		}else{
			return PMRDimention.PMR_OPEN_DT;
		}
	}
}